# Run when commits are pushed to main
on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - main

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate required environment variables
        run: |
          echo "Validating required environment variables..."
          if [ -z "$AZURE_CLIENT_ID" ]; then
            echo "Error: AZURE_CLIENT_ID is not set"
            exit 1
          fi
          if [ -z "$AZURE_TENANT_ID" ]; then
            echo "Error: AZURE_TENANT_ID is not set"
            exit 1
          fi
          if [ -z "$AZURE_SUBSCRIPTION_ID" ]; then
            echo "Error: AZURE_SUBSCRIPTION_ID is not set"
            exit 1
          fi
          if [ -z "$AZURE_ENV_NAME" ]; then
            echo "Error: AZURE_ENV_NAME is not set"
            exit 1
          fi
          if [ -z "$AZURE_LOCATION" ]; then
            echo "Error: AZURE_LOCATION is not set"
            exit 1
          fi
          echo "All required environment variables are set"

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            8.x.x
            9.x.x

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"
        shell: bash

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          USERNAME1: ${{ secrets.PLAYWRIGHT_USERNAME }}
          PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

